#include<iostream>
using namespace std;
struct listNode{
    int data;
    listNode*next;
    listNode(int val){
        data=val;
        next=NULL;
    }
};
void insertion(listNode*&head,int l1){
    listNode*new_node=new listNode(l1);
    new_node->next=head;
    head=new_node;
}

void display(listNode*head){
    listNode*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}
class solution{
    public:
    listNode*addtwosum(listNode*l1,listNode*l2){
         listNode*dummyhead =new listNode(0);
         listNode*p=l1,*q=l2,*curr=dummyhead;
         int carry=0;
        while(p!=NULL || q!=NULL){
        int x=(p!=NULL)? p->data:0;
        int y=(q!=NULL)? q->data:0;
        int sum=carry+x+y;
        carry=sum/10;
        curr->next=new listNode(sum%10);
        curr=curr->next;
        if(p!=NULL) p=p->next;
        if(q!=NULL) q=q->next;
        }
        if(carry>0){
            curr->next=new listNode(carry);
        }
        return dummyhead->next;
    }
};


int main(){
    listNode*l1=NULL;
    listNode*l2=NULL;
    
    insertion(l1,3);
    insertion(l1,4);
    insertion(l1,2);
    display(l1);
    insertion(l2,4);
    insertion(l2,6);
    insertion(l2,5);
    display(l2);
    
    solution sol;
    listNode*result=sol.addtwosum(l1,l2);
    cout<<"sum";
    display(result);
    return 0;
}
